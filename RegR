> #Importing the data
> data <- read.csv('http://bit.ly/w-data')
> 
> data
   Hours Scores
1    2.5     21
2    5.1     47
3    3.2     27
4    8.5     75
5    3.5     30
6    1.5     20
7    9.2     88
8    5.5     60
9    8.3     81
10   2.7     25
11   7.7     85
12   5.9     62
13   4.5     41
14   3.3     42
15   1.1     17
16   8.9     95
17   2.5     30
18   1.9     24
19   6.1     67
20   7.4     69
21   2.7     30
22   4.8     54
23   3.8     35
24   6.9     76
25   7.8     86
> 
> #Attaching the data
> attach(data)
> 
> #Checking the variables
> names(data)
[1] "Hours"  "Scores"
> 
> #Checking the data type of the variables
> class(Hours)
[1] "numeric"
> class(Scores)
[1] "integer"
> 
> #Plotting the data-points on a 2-D scatter plot to find the relationship between the two variables
> plot(Hours,Scores,main='Scatterplot',col='red')
> 
> print("From the graph, we see a positive relation between the number of hours studied and percentage score")
[1] "From the graph, we see a positive relation between the number of hours studied and percentage score"
> 
> #Formulating the model
> model <- lm(Scores~Hours)
> 
> #Description of the model
> summary(model)

Call:
lm(formula = Scores ~ Hours)

Residuals:
    Min      1Q  Median      3Q     Max 
-10.578  -5.340   1.839   4.593   7.265 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   2.4837     2.5317   0.981    0.337    
Hours         9.7758     0.4529  21.583   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.603 on 23 degrees of freedom
Multiple R-squared:  0.9529,    Adjusted R-squared:  0.9509 
F-statistic: 465.8 on 1 and 23 DF,  p-value: < 2.2e-16

> #Plotting the Regression line
> abline(model,col='purple')
> 
> #Fitted values:
> model$fitted
       1        2        3        4        5        6        7        8 
26.92318 52.34027 33.76624 85.57800 36.69899 17.14738 92.42106 56.25059 
       9       10       11       12       13       14       15       16 
83.62284 28.87834 77.75736 60.16091 46.47479 34.74382 13.23706 89.48832 
      17       18       19       20       21       22       23       24 
26.92318 21.05770 62.11607 74.82462 28.87834 49.40753 39.63173 69.93672 
      25 
78.73494 
> 
> #Intercept and Slope coefficients respectively
> coef(model)
(Intercept)       Hours 
   2.483673    9.775803 
> 
> #Making predictions and testing the data with an arbitrary value for the number of hours studied
> predict(model,list(Hours=5))
       1 
51.36269 
